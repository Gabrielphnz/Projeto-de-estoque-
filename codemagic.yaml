workflows:
  android-app:
    # Nome do workflow a ser exibido no Codemagic
    name: Build and Publish Android App
    # Tempo máximo de build em minutos (pode ajustar conforme necessário)
    max_build_duration: 60
    # Define o tipo de instância (linux_s, mac_mini, windows) — linux_s atende para apps Android
    instance_type: linux_s
    environment:
      # Versão do Java necessária para o projeto Gradle (ajuste se você usa outra versão)
      java: 17
      # Caso utilize variáveis ou certificados, defina grupos secretos aqui
      # groups:
      #   - keystore_credentials
    # Scripts que serão executados durante o build
    scripts:
      # Limpa o projeto para evitar conflitos de versões anteriores
      - name: Clean project
        # Usa o comando gradle padrão, pois o wrapper gradlew não está no repositório
        script: cd GerenciadorEstoqueFull && gradle clean
      # Gera APK de debug. Útil para testes internos
      - name: Assemble Debug APK
        script: cd GerenciadorEstoqueFull && gradle assembleDebug
      # Gera APK de release. Se você precisa assinar o APK, configure as credenciais no build.gradle
      - name: Assemble Release APK
        script: cd GerenciadorEstoqueFull && gradle assembleRelease
    # Artefatos que serão salvos após o build. Estes caminhos apontam para os APKs gerados
    artifacts:
      # APK de debug
      - GerenciadorEstoqueFull/app/build/outputs/apk/debug/app-debug.apk
      # APK de release
      - GerenciadorEstoqueFull/app/build/outputs/apk/release/app-release.apk
    # Envio/pubilicação dos artefatos após a conclusão do workflow
    publishing:
      # Envia os APKs por e‑mail para os destinatários definidos. Substitua pelo seu e‑mail real
      email:
        recipients:
          # Envie o APK para o seu e‑mail principal
          - gabrielphnz@gmail.com
      # Você pode adicionar outros canais (Slack, Telegram, App Store etc.) conforme necessidade
      # Por exemplo:
      # slack:
      #   url: $SLACK_WEBHOOK_URL